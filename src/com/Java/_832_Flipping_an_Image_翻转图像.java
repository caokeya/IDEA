package com.Java;

/*
给定一个二进制矩阵 A，我们想先水平翻转图像，然后反转图像并返回结果。
水平翻转图片就是将图片的每一行都进行翻转，即逆序。例如，水平翻转 [1, 1, 0] 的结果是 [0, 1, 1]。
反转图片的意思是图片中的 0 全部被 1 替换， 1 全部被 0 替换。例如，反转 [0, 1, 1] 的结果是 [1, 0, 0]
示例 1:
输入: [[1,1,0],[1,0,1],[0,0,0]]
输出: [[1,0,0],[0,1,0],[1,1,1]]
解释: 首先翻转每一行: [[0,1,1],[1,0,1],[0,0,0]]；
     然后反转图片: [[1,0,0],[0,1,0],[1,1,1]]
示例 2:

输入: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]
输出: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
解释: 首先翻转每一行: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]]；
     然后反转图片: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]

 */
public class _832_Flipping_an_Image_翻转图像 {
    class Solution {
        public int[][] flipAndInvertImage(int[][] A) {
            for (int[] a : A) {
                flip(a);
                invert(a);
            }
            return A;
        }

        private void flip(int[] R) {
            for (int i = 0; i < R.length / 2; i++) {
                int temp = R[i];
                R[i] = R[R.length - 1 - i];
                R[R.length - 1 - i] = temp;
            }
            return;
        }

        private void invert(int[] R) {
            for (int i = 0; i < R.length; i++) {
                R[i] = Math.abs(R[i] - 1);
            }
            return;
        }
    }
}
